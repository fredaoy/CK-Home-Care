import React, { useEffect, useState } from 'react';
import { useLocation, Link, useNavigate } from 'react-router-dom';
import emailjs from 'emailjs-com';

function Checkout() {
  const location = useLocation();
  const navigate = useNavigate();
  const { cartItems = [], totalPrice = 0 } = location.state || {};

  const [email, setEmail] = useState('');
  const [emailVerified, setEmailVerified] = useState(false);
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [address, setAddress] = useState('');

  useEffect(() => {
    const saved = localStorage.getItem('email_verified_status');
    if (saved) {
      const parsed = JSON.parse(saved);
      if (parsed.email === email && parsed.verified === true) {
        setEmailVerified(true);
      } else {
        setEmailVerified(false);
      }
    } else {
      setEmailVerified(false);
    }
  }, [email]);



  const sendVerificationEmail = () => {
    if (!email) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Å‡πà‡∏≠‡∏ô');

    const saved = localStorage.getItem('email_verified_status');
    if (saved) {
      const parsed = JSON.parse(saved);
      if (parsed.email === email && parsed.verified === true) {
        alert('‚úÖ ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
        setEmailVerified(true);
        return;
      }
    }

    const verifyLink = `${window.location.origin}/verify?email=${encodeURIComponent(email)}`;
    emailjs.send(
      'service_m51ju29',
      'template_xs476rg',
      { user_email: email, verify_link: verifyLink },
      'gj9Gi7S_sdRLj88Xt'
    )
      .then(() => alert('‚úÖ ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'))
      .catch(() => alert('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏î‡πâ'));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!emailVerified) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Å‡πà‡∏≠‡∏ô');

    const orderData = {
      name, email, phone, address,
      cartItems, totalPrice
    };

    localStorage.setItem('pending_order', JSON.stringify(orderData));
    alert('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏° ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô!');
    navigate('/payments');
  };

  return (
    <div className="min-h-screen bg-gray-100 py-10 px-4">
      <div className="max-w-3xl mx-auto bg-white p-6 rounded shadow">
        <h2 className="text-2xl font-bold mb-4">üì¶ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</h2>

        {cartItems.length === 0 ? (
          <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ <Link to="/products" className="text-blue-500">‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</Link></p>
        ) : (
          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö</label>
              <input type="text" value={name} onChange={(e) => setName(e.target.value)} required className="w-full border p-2 rounded" />
            </div>
            <div>
              <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
              <div className="flex gap-2">
                <input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                  className="flex-1 border p-2 rounded"
                />
                <button
                  type="button"
                  onClick={sendVerificationEmail}
                  disabled={emailVerified}
                  className={`px-3 py-2 rounded text-sm ${emailVerified
                      ? 'bg-gray-400 text-white cursor-not-allowed'
                      : 'bg-blue-500 hover:bg-blue-600 text-white'
                    }`}
                >
                  üì© ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•
                </button>

              </div>
              {emailVerified && <p className="text-green-600 text-sm mt-1">‚úÖ ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>}
            </div>

            <div>
              <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
              <input type="tel" value={phone} onChange={(e) => setPhone(e.target.value)} required className="w-full border p-2 rounded" />
            </div>
            <div>
              <label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
              <textarea value={address} onChange={(e) => setAddress(e.target.value)} required rows="3" className="w-full border p-2 rounded"></textarea>
            </div>

            {emailVerified && (
              <button type="submit" className="w-full bg-green-600 text-white py-2 rounded">‚úÖ ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</button>
            )}
          </form>
        )}
      </div>
    </div>
  );
}

export default Checkout;
